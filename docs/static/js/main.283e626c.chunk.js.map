{"version":3,"sources":["components/AddCategoty.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategoty","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"2MAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OAGQ,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAOd,SACA,uBACKO,KAAK,OACLC,MAAOT,EACPU,SApBa,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEkCC,UAAUH,GAF5C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAE3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAIA,QCJHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAExB,ECH0B,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAO,GACPa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAjBJC,qBAAW,WAEPxB,EAASC,GACZwB,MAAM,SAAAC,GAEHC,YAAW,WACPC,QAAQC,IAAIH,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,MAEb,UAGL,CAACpB,IAGQqB,EDrBsBQ,CAAc7B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAQlB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACjDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEX,qBAAKA,UAAU,YAAf,SAIMH,EAAOJ,KAAI,SAAAC,GAAG,OACN,cAAC,EAAD,eAEJA,GADUA,EAAIC,aEkBnBmB,EApCM,WAGlB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAOC,OACI,qCACA,gDACA,cAAC,EAAD,CACAA,cAAgBA,IACjB,uBAIA,6BAEK8C,EAAWtB,KAAK,SAAAT,GAAQ,OAClB,cAAC,EAAD,CAEAA,SAAUA,GADJA,YCvBlBgC,EAAUC,SAASC,cAAc,SAEvCC,IAASC,OAAQ,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.283e626c.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport  PropTypes  from 'prop-types';\r\n\r\n\r\nexport const AddCategoty = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length >2) {\r\n            setCategories( cats => [inputValue,...cats ]);\r\n            setInputValue('');  \r\n        }\r\n        \r\n    }\r\n    return (\r\n \r\n            \r\n            <form onSubmit = {handleSubmit}>\r\n            <input\r\n                 type=\"text\"\r\n                 value={inputValue}\r\n                 onChange={ handleInputChange}>\r\n\r\n            </input>\r\n\r\n            </form>\r\n\r\n\r\n    )\r\n}\r\n\r\nAddCategoty.propTypes = {\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category) }&limit=10&api_key=yr2N0IOQixqVE67qvg6dpeVmwbNqlenq`\r\n    const resp = await fetch (url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map ( img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n\r\n   // console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const {data:images, loading} = useFetchGifs( category );\r\n\r\n\r\n\r\n\r\n\r\n//getGifs();\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        { loading && <p className=\"animate__animated animate__flash\">loading...</p>}\r\n        \r\n        { <div className=\"card-grid\">\r\n            \r\n\r\n            {\r\n                images.map(img =>( \r\n                        <GifGridItem \r\n                        key= {img.id}\r\n                {...img }/>\r\n                )\r\n                )\r\n            }\r\n        \r\n        \r\n        </div> }\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n   \r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading: true\r\n    });\r\n\r\nuseEffect( () => {\r\n\r\n    getGifs( category )\r\n.then( imgs => {\r\n\r\n    setTimeout(() => {\r\n        console.log(imgs);\r\n        setState({\r\n            data: imgs,\r\n            loading:false\r\n        });\r\n    }, 3000);\r\n    ;\r\n})\r\n},[category])\r\n\r\n\r\n    return state;\r\n\r\n\r\n}","import React, {useState} from 'react';\r\nimport { AddCategoty } from './components/AddCategoty';\r\nimport { GifGrid } from './components/GifGrid';\r\n//import React, {Fragment} from 'react';\r\n\r\n// FC\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon ball'];\r\n   const [categories, setCategories] = useState(['One piece']);\r\n   // const handleAdd = () => {\r\n     //   setCategories([...categories, 'One piece']);\r\n        \r\n        // setCounter ( (c) => c+1 );\r\n    \r\n    \r\n    return (\r\n        <>\r\n        <h1> GifExpertApp </h1>\r\n        <AddCategoty \r\n        setCategories={ setCategories }/>\r\n       <hr/>\r\n\r\n       \r\n\r\n       <ol>\r\n           {\r\n            categories.map( category =>\r\n                  <GifGrid\r\n                  key= {category}\r\n                  category={category}/>)\r\n            }\r\n            \r\n\r\n\r\n       </ol>\r\n\r\n        </>\r\n    );\r\n        }\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\n\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render( <GifExpertApp />, divRoot );"],"sourceRoot":""}